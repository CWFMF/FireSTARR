services:
  firestarr-setup-gis:
    image: firestarr-setup-gis
    build:
      context: .
      target: firestarr-setup-gis
      dockerfile: .docker/Dockerfile
      args:
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr-setup-gis:${VERSION}
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
      - type: bind
        source: ./config
        target: /appl/config
      - data:/appl/data
      - sims:/appl/data/sims
      - type: bind
        source: ./gis
        target: /appl/gis
    env_file:
      - .env

  firestarr-dev:
    image: firestarr-dev
    build:
      context: .
      target: firestarr-dev
      dockerfile: .docker/Dockerfile
      args:
        VERSION: ${VERSION}
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr-dev:${VERSION}
    security_opt:
      - seccomp:unconfined
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
      - type: bind
        source: ./config
        target: /appl/config
      - data:/appl/data
      - sims:/appl/data/sims
      - type: bind
        source: ./firestarr
        target: /appl/firestarr
    restart: on-failure
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    env_file:
      - .env

  firestarr-dev-svc:
    image: firestarr-dev-svc
    build:
      context: .
      target: firestarr-dev-svc
      dockerfile: .docker/Dockerfile
      args:
        VERSION: ${VERSION}
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr-dev-svc:${VERSION}
    security_opt:
      - seccomp:unconfined
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
      - type: bind
        source: ./config
        target: /appl/config
      - data:/appl/data
      - sims:/appl/data/sims
      - type: bind
        source: ./firestarr
        target: /appl/firestarr
    restart: on-failure
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    env_file:
      - .env

  firestarr-app:
    image: firestarr-app
    build:
      context: .
      target: firestarr-app
      dockerfile: .docker/Dockerfile
      args:
        VERSION: ${VERSION}
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr-app:${VERSION}
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
      - data:/appl/data
      - sims:/appl/data/sims
    env_file:
      - .env

  firestarr-app-svc:
    image: firestarr-app-svc
    build:
      context: .
      target: firestarr-app-svc
      dockerfile: .docker/Dockerfile
      args:
        VERSION: ${VERSION}
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr-app-svc:${VERSION}
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
      - data:/appl/data
      - sims:/appl/data/sims
    env_file:
      - .env
    restart: always

  firestarr:
    image: firestarr
    build:
      context: .
      target: firestarr
      dockerfile: .docker/Dockerfile
      args:
        VERSION: ${VERSION}
        USERNAME: ${USERNAME}
        USER_ID: ${USER_ID}
      tags:
        - firestarr:${VERSION}
    volumes:
      - type: bind
        source: ./firestarr/settings.ini
        target: /appl/firestarr/settings.ini
      - data:/appl/data
      - sims:/appl/data/sims
    env_file:
      - .env

volumes:
  data:
    # symlink to your actual directory if you don't want it in the project folder
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  sims:
    # symlink to your actual directory if you don't want it in the project folder
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./sims
